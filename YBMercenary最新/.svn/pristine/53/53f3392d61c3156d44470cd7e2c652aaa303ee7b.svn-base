//
//  PublishErrandTaskVC.m
//  YBMercenary
//
//  Created by 龙青磊 on 2018/3/28.
//  Copyright © 2018年 xfkeji_yongbing. All rights reserved.
//

#import "PublishErrandTaskVC.h"
#import "ErrandHeaderCell.h"
#import "PublishTaskGoal.h"
#import "PublishTaskMarkCell.h"
#import "ErrandTimeCell.h"
#import "ErrandAdressCell.h"
#import "PublishErrandMapViewController.h"
#import "ZJNPublishTaskMaskCell.h"
@interface PublishErrandTaskVC ()<UIScrollViewDelegate,ErrandHeaderCellDelegate,ErrandTimeCellDelegate,ErrandAdressCellDelegate,ZJNPublishTaskMaskCellDelegate>

@property (nonatomic, assign) NSInteger lineCount;
@property(nonatomic,strong)NSString *task_name;
@property(nonatomic,strong)NSString *itemname;
@property(nonatomic,strong)NSString *numbers;
@property(nonatomic,strong)NSString *pay_amount;
@property(nonatomic,strong)NSString *task_purpose;
@property(nonatomic,strong)NSString *delivery_time;
@property(nonatomic,strong)NSString *validity_time;
@property(nonatomic,strong)NSString *begin_address;
@property(nonatomic,strong)NSString *end_address;
@property(nonatomic,strong)NSString *task_tag;
@property(nonatomic,strong)PublishTaskGoal *goalcell;
@property(nonatomic,strong)PublishTaskMarkCell *task_tagCell;
@property(nonatomic,strong)ZJNPublishTaskMaskCell *markCell;
@end

@implementation PublishErrandTaskVC

- (void)viewDidLoad {
    [super viewDidLoad];
    _lineCount = 1;
    [self configNav];
    [self configTableView];
}

- (void)configNav{
    self.navigationItem.title = @"发布任务";
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@"发布" style:UIBarButtonItemStylePlain target:self action:@selector(publishAction)];
    self.navigationItem.rightBarButtonItem.tintColor = [UIColor whiteColor];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"back"] style:UIBarButtonItemStylePlain target:self action:@selector(cancleAction)];
    self.navigationItem.leftBarButtonItem.tintColor = [UIColor whiteColor];
}

- (void)configTableView{
    self.tableView.estimatedRowHeight = 100;
    self.tableView.rowHeight = UITableViewAutomaticDimension;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.backgroundColor = [UIColor hex:Back_Color];
    self.tableView.contentInset = UIEdgeInsetsMake(0, 0, Width(10), 0);
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 5;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.row == 0) {
        ErrandHeaderCell *cell = [ErrandHeaderCell creatTableViewCellWithTableView:tableView];
        cell.delegate = self;
        return cell;
    }else if(indexPath.row == 1){
        PublishTaskGoal *cell = [PublishTaskGoal creatTableViewCellWithTableView:tableView];
        self.task_purpose=cell.textView.text;
        self.goalcell=cell;
        return cell;
    }else if(indexPath.row == 2){
        ErrandTimeCell *cell = [ErrandTimeCell creatTableViewCellWithTableView:tableView];
        cell.delegate=self;
        return cell;
    }else if(indexPath.row == 3){
        ErrandAdressCell *cell = [ErrandAdressCell creatTableViewCellWithTableView:tableView];
        cell.delegate=self;
        return cell;
    }else{
        ZJNPublishTaskMaskCell *cell = [ZJNPublishTaskMaskCell creatTableViewCellWithTableView:tableView];
        self.markCell = cell;
        cell.linecount = self.lineCount;
        cell.delegate = self;
        return cell;
//        PublishTaskMarkCell *cell = [PublishTaskMarkCell creatTableViewCellWithTableView:tableView];
//        self.task_tagCell=cell;
//        return cell;
    }
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(indexPath.row == 2){
        
    }
}

#pragma mark 点击导航右侧按钮
- (void)publishAction{
    
    if (self.task_name.length<=0) {
        [DWBToast showCenterWithText:@"请输入任务名称"];
    }
    else if (self.itemname.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入物品名称"];
    }
    else if (self.numbers.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入物品数量"];
    }
    else if (self.pay_amount.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入佣金金额"];
    }
    else if (self.goalcell.textView.text.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入任务目的"];
    }
    else if (self.delivery_time.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入送达时间"];
    }
    else if (self.validity_time.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入任务有效期"];
    }
    else if (self.begin_address.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入开始地址"];
    }
    else if (self.end_address.length<=0)
    {
        [DWBToast showCenterWithText:@"请输入目的地址"];
    }
    else{
        self.task_tag=nil;
        for (NSString * str in self.markCell.dataArr) {
            
            if (self.task_tag) {
                self.task_tag=[NSString stringWithFormat:@"%@|%@",self.task_tag,str];
            }
            else{
                self.task_tag=[NSString stringWithFormat:@"%@",str];
            }
            
        }
        [self requestCommonDrunkery_post_add];
    }
    
}
-(void)zjnReloadeViewWithLineCount:(NSInteger)count{
    _lineCount = count;
    [self.tableView reloadData];
}
//- (void)reloadeViewWithLineCount:(NSInteger)count{
//    _lineCount = count;
//    [self.tableView reloadData];
//}

- (void)cancleAction{
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{
    [self.view endEditing:YES];
}

#pragma mark 0区单元格代理方法
-(void)errandHeaderCellTextFieldEndChanged:(NSString *)text index:(NSInteger)index{
    if (index == 0) {
        //任务名称
        DBLog(@"%@",text);
        
        self.task_name=text;
    }else if (index == 1){
        //物品名称
        DBLog(@"%@",text);
        
        self.itemname=text;
    }else if (index == 2){
        //数量
        DBLog(@"%@",text);
        self.numbers=text;
    }else{
        //佣金
        DBLog(@"%@",text);
        
        self.pay_amount=text;
    }
}

#pragma mark  送达时间-任务有效期
-(void)didSelectRowwithtext:(NSString *)text index:(NSInteger)index
{
    //送达时间
    if (index==1) {
        
        self.delivery_time=text;
    }
    //任务有效期
    else{
        self.validity_time=text;
    }
}
-(void)ErrandTimeCelltextFieldDidEndEditing:(NSString *)str
{
    self.validity_time=str;
}
#pragma mark  开始 目的地址

-(void)errandAddressCellSelectStardAddress{
    PublishErrandMapViewController *viewC = [[PublishErrandMapViewController alloc]init];
    viewC.type = @"0";
    viewC.hidesBottomBarWhenPushed = YES;
    viewC.startAddressBlock = ^(NSString *startAddress) {
        self.begin_address = startAddress;
        ErrandAdressCell *cell = (ErrandAdressCell *)[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:3 inSection:0]];
        cell.beginLabel.text = startAddress;
    };
    [self.navigationController pushViewController:viewC animated:YES];
}
-(void)errandAddressCellSelectEndAddress{
    PublishErrandMapViewController *viewC = [[PublishErrandMapViewController alloc]init];
    viewC.type = @"1";
    viewC.hidesBottomBarWhenPushed = YES;
    viewC.endAddressBlock = ^(NSString *endAddress) {
        self.end_address = endAddress;
        ErrandAdressCell *cell = (ErrandAdressCell *)[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:3 inSection:0]];
        cell.goalLabel.text = endAddress;
    };
    [self.navigationController pushViewController:viewC animated:YES];
}
-(void)errandAddressCellDeleteStartAddress{
    self.begin_address = @"";
    ErrandAdressCell *cell = (ErrandAdressCell *)[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:3 inSection:0]];
    cell.beginLabel.text = @"请选择取货地址";
}
#pragma mark request
#pragma mark
-(void)requestCommonDrunkery_post_add
{
    
    NSDictionary *parameters =@{@"token":USERTOKEN,@"task_type":@(self.task_type),@"task_type_child":@(self.task_type_child),@"task_name":self.task_name,@"task_tag":self.task_tag,@"pay_amount":@([self.pay_amount intValue]),@"validity_time":@([self.validity_time intValue]),@"task_purpose":self.goalcell.textView.text,@"itemname":self.itemname,@"numbers":@([self.numbers intValue]),@"delivery_time":@([self.delivery_time intValue]),@"begin_address":self.begin_address,@"end_address":self.end_address,@"task_city":[[NSUserDefaults standardUserDefaults] objectForKey:@"locationCity"]};
    [[YBRequestManager sharedYBManager]postWithUrlString:Home_Task_addtask parameters:parameters success:^(id data) {
        
        if ([data[@"code"]integerValue] ==0) {
            
            [DWBToast showCenterWithText:@"发布成功"];
            
            [self dismissViewControllerAnimated:YES completion:nil];
        }
        else{
            
            [DWBToast showCenterWithText:data[@"msg"]];
        }
    } failure:^(NSError *error) {
        
    }];
    
}


@end
